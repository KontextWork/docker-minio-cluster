version: '3'

services:
  minio:
    image: minio/minio:latest
    volumes:
      - minio-data:/data
      - minio-config:/root/.minio
    ports:
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    labels:
      traefik.http.services.minio.loadbalancer.server.port: 9000
      traefik.http.routers.minio.rule: 'Host(`${MINIO_DOMAIN}`)'
      traefik.http.routers.minio.tls: 'true'
      traefik.http.routers.minio.tls.certresolver: 'default'
      traefik.enable: 'true'

  traefik:
    restart: always
    image: eugenmayer/traefik:2.x
    ports:
      - 80:8080
      - 443:8443
      - 8000:8000
    environment:
      TRAEFIK_ACME_ENABLE: 'true'
      TRAEFIK_ACME_CHALLENGE: 'dns'
      TRAEFIK_ADMIN_SSL: 'false'
      TRAEFIK_ADMIN_ENABLE: 'false'

      TRAEFIK_ACME_CHALLENGE_DNS_PROVIDER: '${TRAEFIK_ACME_CHALLENGE_DNS_PROVIDER}'
      TRAEFIK_ACME_CHALLENGE_DNS_CREDENTIALS: '${TRAEFIK_ACME_CHALLENGE_DNS_CREDENTIALS}'

      ### basic provider setup
      TRAEFIK_HTTPS_ENABLE: 'only'
      TRAEFIK_DOCKER_ENABLE: 'true'
      TRAEFIK_DOCKER_EXPOSEDBYDEFAULT: 'false'
    volumes:
      - certs:/mnt/certs
      - filestorage:/mnt/filestorage
      - acme:/mnt/acme
      # mount our docker socket so our docker container can be discovered
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  minio-data:
    driver: local
  minio-config:
    driver: local
  certs:
  filestorage:
  acme:

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: ${MTU:-1500}
